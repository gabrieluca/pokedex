name: CI
on:
  pull_request:
    branches: [main]

jobs:
  assignAuthor:
    name: Assign author to PR
    runs-on: ubuntu-latest
    steps:
      - name: Assign author to PR
        uses: technote-space/assign-author@v1.3.1

  tests:
    name: Analyzer and Tests
    runs-on: ubuntu-latest
    steps:
      # Get Flutter version from project pubspec.yaml
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@v2
      # Clone the current repository
      - name: Clone repo
        uses: actions/checkout@v3.5.2
      # Install Flutter
      - uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'
      - run: flutter pub get

      - name: Analyzer and Dart Code Metrics
      # Verify correct formatting
        run: flutter format --dry-run --set-exit-if-changed lib/
      - run: flutter format --dry-run --set-exit-if-changed test/
      # Run flutter analyzer with annotations
      - uses: zgosalvez/github-actions-analyze-dart@v2.0.14
      # Run DCM rules
      - uses: dart-code-checker/dart-code-metrics-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # Run all tests
      - name: Tests
        run: flutter test --coverage
      - run: flutter test --machine > test-results.json
      # Outputs a Test Report
      - uses: dorny/test-reporter@v1.6.0
        with:
          name: test-results
          path: test-results.json
          reporter: flutter-json
      # Set a min coverage for tests
      - uses: VeryGoodOpenSource/very_good_coverage@v2.1.0
        with:
          min_coverage: 0
          # exclude: '**/*_observer.dart **/change.dart'

  build:
    name: Build app
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Build for each platform(Android and iOS)
        os: [ubuntu-latest, macos-11]
    steps:
      # Get Flutter version from project pubspec.yaml
      - name: Get Flutter version
        id: get-flutter-version
        uses: zgosalvez/github-actions-get-flutter-version-env@2.0.14
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ steps.get-flutter-version.outputs.version }}
          channel: 'stable'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-flutter_ci_example-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}

      - name: Build Android app
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "Building Android..."
          pwd
          flutter pub get
          flutter build apk --no-pub
          flutter build appbundle --no-pub
      - name: Build iOS app
        if: ${{ matrix.os == 'macos-11' }}
        run: |
          flutter pub get
          echo "Building iOS..."
          echo "Not implemented yet."

      - name: 'Upload Builds'
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: builds
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 5
